name: create-github-release
# Generate a GitHub release for the considered solution

on:
  workflow_dispatch:
      github_release_body:
        description: 'Text for the body of the GitHub release'
        required: true

env:
  solution_name: PowerPlatformALMWithGitHub
  
jobs:
  create-build-environment:
    runs-on: windows-latest
    env:
      powerapps_environment_location: canada
      powerapps_environment_sku: Trial
      powerapps_environment_currency_name: CAD
      powerapps_environment_language_code: 1033
      RUNNER_DEBUG: 1

    steps:
    - name: Set current date as env variable
      run: echo "::set-env name=NOW::$(date +'%Y%m%d')"

    - name: Set powerapps_environment_display_name as env variable
      run: echo "::set-env name=powerapps_environment_display_name::Build - ${{ env.NOW }} - ${{ github.run_id }}"

    - name: Set powerapps_environment_domain_name as env variable
      run: echo "::set-env name=powerapps_environment_domain_name::build-${{ env.NOW }}-${{ github.run_id }}"

    - name: Get PowerShell modules
      shell: powershell
      run: |
        Install-Module -Name Microsoft.PowerApps.Administration.PowerShell -Force -Verbose -Scope CurrentUser
        Install-Module -Name Microsoft.PowerApps.PowerShell -AllowClobber -Force -Verbose -Scope CurrentUser
    
    - name: Add Power Apps account & Create Power Apps environment
      shell: powershell
      run: |
        $pass = ConvertTo-SecureString "${{ secrets.BUILD_USER_PASSWORD }}" -AsPlainText -Force
        Add-PowerAppsAccount -Username ${{ secrets.BUILD_USER_LOGIN }} -Password $pass
        
        New-AdminPowerAppEnvironment -DisplayName '${{ env.powerapps_environment_display_name }}' -Location ${{ env.powerapps_environment_location }} -EnvironmentSku ${{ env.powerapps_environment_sku }} -ProvisionDatabase -CurrencyName ${{ env.powerapps_environment_currency_name }} -LanguageName ${{ env.powerapps_environment_language_code }} -DomainName '${{ env.powerapps_environment_domain_name }}'
  
  build-managed-solution:
    needs: create-build-environment
    runs-on: windows-latest
    env:
      powerapps_environment_url_base: .crm3.dynamics.com
      RUNNER_DEBUG: 1

    steps:
    - name: Set current date as env variable
      run: echo "::set-env name=NOW::$(date +'%Y%m%d')"

    - name: Set powerapps_environment_domain_name as env variable
      run: echo "::set-env name=powerapps_environment_domain_name::build-${{ env.NOW }}-${{ github.run_id }}"

    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v0
      with:
        solution-folder: Solutions/${{ env.solution_name }}
        solution-file: out/Solutions/${{ env.solution_name }}.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: https://${{ env.powerapps_environment_domain_name }}${{ env.powerapps_environment_url_base }}
        user-name: ${{ secrets.BUILD_USER_LOGIN }}
        password-secret: ${{ secrets.BUILD_USER_PASSWORD }}
        solution-file: out/Solutions/${{ env.solution_name }}.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: https://${{ env.powerapps_environment_domain_name }}${{ env.powerapps_environment_url_base }}
        user-name: ${{ secrets.BUILD_USER_LOGIN }}
        password-secret: ${{ secrets.BUILD_USER_PASSWORD }}
        solution-name: ${{ env.solution_name }}
        managed: true
        solution-output-file: out/ship/${{ env.solution_name }}.zip

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: out/ship/${{ env.solution_name }}.zip

  create-github-release:
    needs: build-managed-solution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set current date as env variable
        run: echo "::set-env name=NOW::$(date +'%Y%m%d')"

      - name: Fetch the ready to ship solution from GH artifact store
        uses: actions/download-artifact@v2
        with:
          name: managedSolutions
          path: out/release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.solution_name }}_${{ env.NOW }}_${{ github.run_id }}
          release_name: ${{ env.solution_name }} Release - ${{ env.NOW }} - ${{ github.run_id }}
          body: |
            ${{ github.event.inputs.github_release_body }}
          draft: false
          prerelease: false

      - name: Upload Release Asset - Solution
        id: upload-release-asset-solution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/release/${{ env.solution_name }}.zip
          asset_name: ${{ env.solution_name }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - README
        id: upload-release-asset-readme
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: README.md
          asset_name: README.md
          asset_content_type: application/md

  delete-build-environment:
    needs: create-github-release
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Set current date as env variable
      run: echo "::set-env name=NOW::$(date +'%Y%m%d')"

    - name: Set powerapps_environment_search_name as env variable
      run: echo "::set-env name=powerapps_environment_search_name::Build*-*${{ env.NOW }}*-*${{ github.run_id }}"
    
    - name: Get PowerShell modules
      shell: powershell
      run: |
        Install-Module -Name Microsoft.PowerApps.Administration.PowerShell -Force -Verbose -Scope CurrentUser
        Install-Module -Name Microsoft.PowerApps.PowerShell -AllowClobber -Force -Verbose -Scope CurrentUser
    
    - name: Add Power Apps account & Delete Power Apps environment
      shell: powershell
      run: |
        $pass = ConvertTo-SecureString "${{ secrets.BUILD_USER_PASSWORD }}" -AsPlainText -Force
        Add-PowerAppsAccount -Username ${{ secrets.BUILD_USER_LOGIN }} -Password $pass

        $PowerAppEnvironmentDetails = Get-AdminPowerAppEnvironment *${{ env.powerapps_environment_search_name }}*
        Remove-AdminPowerAppEnvironment -EnvironmentName $PowerAppEnvironmentDetails.EnvironmentName