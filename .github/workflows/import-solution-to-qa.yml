name: import-solution-to-qa
# Upload the solutions to the GitHub artifacts and deploy to the QA environment

on:
  push:
    branches: [ main ]
    paths:
      - 'Solutions/**'
      - '!.github/**'
      - '!AzureDevOpsPipelines/**'
      - '!LICENSE'
      - '!README.md'

jobs:
  create-build-environment:
    runs-on: windows-latest
    env:
      POWERAPPS_ENVIRONMENT_LOCATION: canada
      POWERAPPS_ENVIRONMENT_SKU: Trial
      POWERAPPS_ENVIRONMENT_CURRENCY_NAME: CAD
      POWERAPPS_ENVIRONMENT_LANGUAGE_CODE: 1033
      RUNNER_DEBUG: 1

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    
    - name: Set current date as env variable
      run: echo "::set-env name=NOW::$(date +'%Y%m%d')"

    - name: Set POWERAPPS_ENVIRONMENT_DISPLAY_NAME as env variable
      run: echo "::set-env name=POWERAPPS_ENVIRONMENT_DISPLAY_NAME::Build - ${{ env.NOW }} - ${{ github.run_number }}"

    - name: Set POWERAPPS_ENVIRONMENT_DOMAIN_NAME as env variable
      run: echo "::set-env name=POWERAPPS_ENVIRONMENT_DOMAIN_NAME::build-${{ env.NOW }}-${{ github.run_number }}"

    - name: Get PowerShell modules
      shell: powershell
      run: |
        Install-Module -Name Microsoft.PowerApps.Administration.PowerShell -Force -Verbose -Scope CurrentUser
        Install-Module -Name Microsoft.PowerApps.PowerShell -AllowClobber -Force -Verbose -Scope CurrentUser
    
    - name: Add Power Apps account & Create Power Apps environment
      shell: powershell
      run: |
        $pass = ConvertTo-SecureString "${{ secrets.BUILD_USER_PASSWORD }}" -AsPlainText -Force
        Add-PowerAppsAccount -Username ${{ secrets.BUILD_USER_LOGIN }} -Password $pass
        
        New-AdminPowerAppEnvironment -DisplayName '${{ env.POWERAPPS_ENVIRONMENT_DISPLAY_NAME }}' -Location ${{ env.POWERAPPS_ENVIRONMENT_LOCATION }} -EnvironmentSku ${{ env.POWERAPPS_ENVIRONMENT_SKU }} -ProvisionDatabase -CurrencyName ${{ env.POWERAPPS_ENVIRONMENT_CURRENCY_NAME }} -LanguageName ${{ env.POWERAPPS_ENVIRONMENT_LANGUAGE_CODE }} -DomainName '${{ env.POWERAPPS_ENVIRONMENT_DOMAIN_NAME }}'
  
  build-managed-solution:
    needs: create-build-environment
    runs-on: windows-latest
    env:
      POWERAPPS_ENVIRONMENT_URL_BASE: .crm3.dynamics.com
      SOLUTION_NAME: PowerPlatformALMWithGitHub
      RUNNER_DEBUG: 1

    steps:
    - name: Set current date as env variable
      run: echo "::set-env name=NOW::$(date +'%Y%m%d')"

    - name: Set POWERAPPS_ENVIRONMENT_DOMAIN_NAME as env variable
      run: echo "::set-env name=POWERAPPS_ENVIRONMENT_DOMAIN_NAME::build-${{ env.NOW }}-${{ github.run_number }}"

    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v0
      with:
        solution-folder: Solutions/${{ env.SOLUTION_NAME }}
        solution-file: out/Solutions/${{ env.SOLUTION_NAME }}.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: https://${{ env.POWERAPPS_ENVIRONMENT_DOMAIN_NAME }}${{ env.POWERAPPS_ENVIRONMENT_URL_BASE }}
        user-name: ${{ secrets.BUILD_USER_LOGIN }}
        password-secret: ${{ secrets.BUILD_USER_PASSWORD }}
        solution-file: out/Solutions/${{ env.SOLUTION_NAME }}.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: https://${{ env.POWERAPPS_ENVIRONMENT_DOMAIN_NAME }}${{ env.POWERAPPS_ENVIRONMENT_URL_BASE }}
        user-name: ${{ secrets.BUILD_USER_LOGIN }}
        password-secret: ${{ secrets.BUILD_USER_PASSWORD }}
        solution-name: ${{ env.SOLUTION_NAME }}
        managed: true
        solution-output-file: out/ship/${{ env.SOLUTION_NAME }}.zip

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: out/ship/${{ env.SOLUTION_NAME }}.zip

  import-solution-to-qa:
    needs: build-managed-solution
    runs-on: windows-latest
    env:
      POWERAPPS_QA_ENVIRONMENT_URL: https://rpothin-qa.crm3.dynamics.com
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: out/release/

    - run: get-childitem .\out\release\

    - name: Import solution to qa env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{ env.POWERAPPS_QA_ENVIRONMENT_URL }}
        user-name: ${{ secrets.QA_USER_LOGIN }}
        password-secret: ${{ secrets.QA_USER_PASSWORD }}
        solution-file: out/release/${{ env.SOLUTION_NAME }}.zip
        force-overwrite: true
        publish-changes: true

  delete-build-environment:
    needs: import-solution-to-qa
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Set current date as env variable
      run: echo "::set-env name=NOW::$(date +'%Y%m%d')"

    - name: Set POWERAPPS_ENVIRONMENT_SEARCH_NAME as env variable
      run: echo "::set-env name=POWERAPPS_ENVIRONMENT_SEARCH_NAME::Build*-*${{ env.NOW }}*-*${{ github.run_number }}"
    
    - name: Get PowerShell modules
      shell: powershell
      run: |
        Install-Module -Name Microsoft.PowerApps.Administration.PowerShell -Force -Verbose -Scope CurrentUser
        Install-Module -Name Microsoft.PowerApps.PowerShell -AllowClobber -Force -Verbose -Scope CurrentUser
    
    - name: Add Power Apps account & Delete Power Apps environment
      shell: powershell
      run: |
        $pass = ConvertTo-SecureString "${{ secrets.BUILD_USER_PASSWORD }}" -AsPlainText -Force
        Add-PowerAppsAccount -Username ${{ secrets.BUILD_USER_LOGIN }} -Password $pass

        $PowerAppEnvironmentDetails = Get-AdminPowerAppEnvironment *${{ env.POWERAPPS_ENVIRONMENT_SEARCH_NAME }}*
        Remove-AdminPowerAppEnvironment -EnvironmentName $PowerAppEnvironmentDetails.EnvironmentName