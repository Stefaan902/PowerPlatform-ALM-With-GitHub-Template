name: delete-powerapps-dev-environment-when-issue-closed
# Delete the Power Apps Dev environment created to work on the considered issue when it is closed

# Workflow that is triggered when an issue is closed or deleted
on:
  issues:
    types: [closed, deleted]

env:
  powerapps_environment_display_name: Dev - Issue ${{ github.event.issue.number }} # Display name of the Power Apps Dev environment associated to the issue
  powerapps_environment_domain_name: dev-issue-${{ github.event.issue.number }} # Domain name of the Power Apps Dev environment associated to the issue
  powerapps_environment_url_base: .crm3.dynamics.com # Base URL of the Power Apps Dev environment associated to the issue

jobs:
  # Job to delete the Power Apps Dev environment associated to the issue
  delete-powerapps-dev-environment:
    if: contains(github.event.issue.labels.*.name, 'dev env created')
    runs-on: windows-latest
    env:
      powerapps_environment_search_name: Dev*-*Issue*${{ github.event.issue.number }} # Display name of the Power Apps Dev environment associated to the issue where the " " are replaced by "*"
      RUNNER_DEBUG: 1

    steps:
    # Install the PowerShell modules we will need for the creation of the just in time Power Apps Build environment
    - name: Get PowerShell modules
      shell: powershell
      run: |
        Install-Module -Name Microsoft.PowerApps.Administration.PowerShell -Force -Verbose -Scope CurrentUser
        Install-Module -Name Microsoft.PowerApps.PowerShell -AllowClobber -Force -Verbose -Scope CurrentUser
    
    # Add a Power Apps account to use the PowerShell Power Apps Admin module
    # Search the Power Apps Dev environment associated to the issue to get its ID (EnvironmentName)
    # Delete the Power Apps Dev environment associated to the issue
    - name: Add Power Apps account & Delete Power Apps environment
      shell: powershell
      run: |
        $pass = ConvertTo-SecureString "${{ secrets.DEV_USER_PASSWORD }}" -AsPlainText -Force
        Add-PowerAppsAccount -Username ${{ secrets.DEV_USER_LOGIN }} -Password $pass

        $PowerAppEnvironmentDetails = Get-AdminPowerAppEnvironment *${{ env.powerapps_environment_search_name }}*
        Remove-AdminPowerAppEnvironment -EnvironmentName $PowerAppEnvironmentDetails.EnvironmentName
  
  # Add a comment on the issue to notify that the Power Apps Dev environment has been deleted
  add-comment-on-issue:
    needs: delete-powerapps-dev-environment
    runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    # Add the new comment to the issue
    - name: New comment on issue
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |
          [**${{ env.powerapps_environment_display_name }}**](https://${{ env.powerapps_environment_domain_name }}${{ env.powerapps_environment_url_base }}) Power Apps environment deleted!